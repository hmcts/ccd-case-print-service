plugins {
  id 'java'
  id 'application'
  id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.23'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    name = "AzureArtifacts"
    url = uri("https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1")
  }
}

dependencies {
  testImplementation group: 'com.github.hmcts', name: 'ccd-test-definitions', version: 'DEV-SNAPSHOT'
  testImplementation group: 'com.github.hmcts', name: 'befta-fw', version: '9.2.4'
  testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.9'
}

sourceSets {
  aat {
    java {
      srcDir('src/java')
      compileClasspath += main.output + test.output
      runtimeClasspath += main.output + test.output
    }
    resources {
      srcDir('src/resources')
    }
  }
}

configurations {
  aatImplementation.extendsFrom(testImplementation)
  cucumberRuntime.extendsFrom(functionalRuntime)
}

task highLevelDataSetup(type: JavaExec) {
  mainClass = "uk.gov.hmcts.ccd.printservice.befta.HighLevelDataSetupApp"
  classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

task smoke(type: Test) {
  description = 'Executes smoke tests against an the CCD Case Print Service API instance just deployed'
  setTestClassesDirs(sourceSets.aat.output.classesDirs)

  doFirst {
    generateCucumberReports.enabled = true
    javaexec {
      main = "uk.gov.hmcts.ccd.printservice.befta.CasePrintServiceBeftaMain"
      classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = ['--plugin', "json:${rootDir}/target/cucumber.json", '--tags', '@Smoke', '--glue',
              'uk.gov.hmcts.befta.player', 'src/resources/features']
    }
  }

  finalizedBy {
    generateCucumberReports {
      doLast{
        new File("${rootDir}/BEFTA Report for Smoke Tests").mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file("${rootDir}/BEFTA Report for Smoke Tests"))
      }
    }
  }

  outputs.upToDateWhen { false }
}

task functional(type: Test) {
  description = 'Executes functional tests against an the CCD Case Print Service API instance just deployed'
  setTestClassesDirs(sourceSets.aat.output.classesDirs)

  doFirst {
    generateCucumberReports.enabled = true
    javaexec {
      main = "uk.gov.hmcts.ccd.printservice.befta.CasePrintServiceBeftaMain"
      classpath += configurations.cucumberRuntime + sourceSets.aat.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
      args = ['--plugin', "json:${rootDir}/target/cucumber.json", '--tags', 'not @Ignore', '--glue',
              'uk.gov.hmcts.befta.player', 'src/resources/features']
    }
  }

  finalizedBy {
    generateCucumberReports {
      doLast{
        delete "${rootDir}/BEFTA Report for Functional Tests/"
        new File("${rootDir}/BEFTA Report for Functional Tests").mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file("${rootDir}/BEFTA Report for Functional Tests"))
        logger.quiet("Functional test report moved to ---> file://${rootDir}/BEFTA%20Report%20for%20Functional%20Tests/overview-features.html")
      }
    }
  }

  outputs.upToDateWhen { false }
}

task fortifyScan(type: JavaExec)  {
  mainClass = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  // The line below prevents the build from failing if the Fortify scan detects issues
  ignoreExitValue = true
}

cucumberReports {
  outputDir = file("${rootDir}/target/cucumber")
  reports = files("${rootDir}/target/cucumber.json")
}
